filter(sex != "Other") %>%
ggplot(aes(age, produced, color = sex)) +
ggthemes::theme_few() +
geom_jitter(alpha = 0.3, width = 0.225) +
geom_smooth(method = "loess") +
coord_cartesian(ylim = c(0, 686)) +
labs(
x = "Age in months",
y = "Total words produced",
color = "Child gender"
)
#GLM fits for WG plot
wg_momed <-
wg_filtered %>%
mutate(maternal_ed = maternal_ed %>%
fct_collapse("High school diploma or less" = c(
"High school diploma",
"Some high school or less"
)) %>%
fct_relevel(
"College diploma or more",
"Some college education",
"High school diploma or less"
)) %>%
filter(!is.na(maternal_ed)) %>%
select(
age,
`Words Understood` = understood,
`Words Produced` = produced,
maternal_ed
) %>%
pivot_longer(
cols = c("Words Understood", "Words Produced"),
names_to = "measure",
values_to = "words"
)
wg_momed_models <-
wg_momed %>%
mutate(words_false = wg_total_words - words) %>%
group_by(measure) %>%
nest() %>%
mutate(model = map(data, function(measure_data) {
glm(cbind(words, words_false) ~ age * maternal_ed - maternal_ed,
family = "binomial", data = measure_data)
}))
data_cells_wg <- wg_momed %>% distinct(maternal_ed, age)
wg_momed_fits <-
wg_momed_models %>%
mutate(fits = map(model, function(m) {
data_cells_wg %>%
mutate(fitted = predict(m, newdata = data_cells_wg, type = "response"))
})) %>%
select(measure, fits) %>%
unnest(fits) %>%
ungroup() %>%
mutate(fitted = fitted * wg_total_words)
##figure caption
wgglm_caption <-
str_c(
"Individual children's word production (left panel) and comprehension (right panel) scores from Dataset 1 (full Web-CDI sample) plotted by age and primary caregiver’s level of education (binned into \"High school diploma or less\", \"Some college education\", and \"College diploma or more\") as reported in the sample of Words and Gestures Web-CDI administrations collected as of November 2020 (N = ", formatC(filtered_n_wg, big.mark = ",", big.interval = 3), "). Curves show generalized linear models fits."
)
ggplot(wg_momed, aes(age, words, color = maternal_ed)) +
facet_grid(~measure) +
geom_jitter(alpha = 0.2, width = 0.225) +
geom_line(aes(y = fitted), size = 1, data = wg_momed_fits) +
coord_cartesian(ylim = c(0, 396)) +
ggthemes::theme_few() +
labs(
color = "Primary caregiver education level",
x = "Age in months",
y = "Number of words"
) +
scale_x_continuous(breaks = seq(from = 8, to = 18, by = 2))
wg_med_plot <-
wg_filtered %>%
mutate(
maternal_ed = fct_recode(
maternal_ed,
"High school diploma or less" = "High school diploma",
"High school diploma or less" = "Some high school or less"
)
) %>%
filter(!is.na(maternal_ed)) %>%
select(
age,
`Words Understood` = understood,
`Words Produced` = produced,
maternal_ed
) %>%
pivot_longer(
cols = c("Words Understood", "Words Produced"),
names_to = "measure",
values_to = "words"
) %>%
group_by(age, maternal_ed, measure) %>%
summarize(
median = median(words, na.rm = TRUE),
first_quartile = quantile(words, probs = 0.25, na.rm = TRUE),
third_quartile = quantile(words, probs = 0.75, na.rm = TRUE)
) %>%
ggplot(aes(age, median, color = maternal_ed)) +
facet_grid(~measure) +
geom_point(position = position_dodge(width = 0.5), size = 3) +
geom_linerange(
aes(ymin = first_quartile, ymax = third_quartile),
position = position_dodge(width = 0.5),
size = 0.8
) +
scale_x_continuous(breaks = seq(from = 8, to = 18, by = 2)) +
coord_cartesian(ylim = c(0, 390)) +
ggthemes::theme_few() +
labs(
x = "Age in months",
y = "Nmber of words"
) +
theme(
axis.text = element_text(size = 15),
axis.title = element_text(size = 15),
legend.text = element_text(size = 15),
strip.text = element_text(size = 15),
legend.position = "bottom",
legend.title = element_blank()
)
ggsave(
"median_plot.png",
plot = last_plot(),
path = fig_directory,
width = 12,
height = 8
)
medplot_caption <- "Median vocabulary production (left) and comprehension (right) scores from Dataset 1 (full Web-CDI sample) by age and primary caregiver's level of education attainment on the WG form. Lines indicate span between first and third quartiles for each age."
img_3 <- png::readPNG(path(fig_directory, "median_plot.png"))
grid::grid.raster(img_3)
##fitting GLM's for WS data
ws_momed <-
ws_filtered %>%
mutate(maternal_ed = maternal_ed %>%
fct_collapse("High school diploma or less" = c(
"High school diploma",
"Some high school or less"
)) %>%
fct_relevel(
"College diploma or more",
"Some college education",
"High school diploma or less"
)) %>%
filter(!is.na(maternal_ed) & maternal_ed != "Not reported") %>%
select(
age,
produced,
maternal_ed
)
ws_momed_models <-
ws_momed %>%
mutate(words_false = ws_total_words - produced) %>%
nest() %>%
mutate(model = map(data, function(measure_data) {
glm(cbind(produced, words_false) ~ age * maternal_ed - maternal_ed,
family = "binomial", data = measure_data)
}))
data_cells_ws <- ws_momed %>% distinct(maternal_ed, age)
ws_momed_fits <-
ws_momed_models %>%
mutate(fits = map(model, function(m) {
data_cells_ws %>%
mutate(fitted = predict(m, newdata = data_cells_ws, type = "response"))
})) %>%
select(fits) %>%
unnest(fits) %>%
mutate(fitted = fitted * wg_total_words)
wsglm_caption <-
str_c("Individual children’s vocabulary production scores from Dataset 1 (full Web-CDI sample) plotted by children’s age and primary caregiver education level of primary caregiver education as reported in the sample of Words and Sentences Web-CDI administrations collected as of November 2020 (N = ", formatC(filtered_n_ws, big.mark = ",", big.interval = 3), ").   Curves show generalized linear models fits.")
#number of WS participants with less than high school education
no_hs_ws <-
ws_filtered %>%
filter(maternal_ed == "Some high school or less") %>%
nrow()
ggplot(ws_momed, aes(age, produced, color = maternal_ed)) +
geom_jitter(alpha = 0.2, width = 0.225) +
geom_line(aes(y = fitted), size = 1, data = ws_momed_fits) +
coord_cartesian(ylim = c(0, 396)) +
ggthemes::theme_few() +
labs(
color = "Primary caregiver education level",
x = "Age in months",
y = "Number of words"
) +
scale_x_continuous(breaks = seq(from = 16, to = 30, by = 2))
#WG Linear regression models
wg_lm_df <-
wg_filtered %>%
mutate(
age_c = age - mean(age, na.rm = TRUE),
maternal_ed_c = mother_education - mean(mother_education, na.rm = TRUE),
maternal_ed = fct_recode(
maternal_ed,
"High school diploma or less" = "High school diploma",
"High school diploma or less" = "Some high school or less"
)
)
ses_wg_lm_comp <-
lm_robust(formula = understood ~ age_c * maternal_ed, data = wg_lm_df)
beta_age_comp <- ses_wg_lm_comp$coefficients[[2]]
p_age_comp <- ses_wg_lm_comp$p.value[[2]]
beta_hs_ed_comp <- ses_wg_lm_comp$coefficients[[4]]
p_hs_ed_comp <- ses_wg_lm_comp$p.value[[4]]
ses_wg_lm_prod <-
lm_robust(formula = produced ~ age_c * maternal_ed, data = wg_lm_df)
beta_age_prod <- ses_wg_lm_prod$coefficients[[2]]
p_age_prod <- ses_wg_lm_prod$p.value[[2]]
beta_hs_ed_prod <- ses_wg_lm_prod$coefficients[[4]]
p_hs_ed_prod <- ses_wg_lm_prod$p.value[[4]]
img_4 <- png::readPNG(path(fig_directory, "facebook_ad.png"))
grid::grid.raster(img_4)
load(ses_sample_exclusions)
exclusion_tbl_ses %>%
kbl(
booktabs = TRUE,
linesep = "",
caption = "Exclusions from Dataset 2: recent data collection using Facebook and Prolific."
) %>%
kable_styling(
position = "center",
latex_options = "scale_down"
) %>%
column_spec(1, width = "2.4in") %>%
column_spec(2:5, width = "1in") %>%
row_spec(0, bold = TRUE)
prolific_filtered_n <-
ws_ses %>%
filter(str_detect(study_name, "prolific")) %>%
nrow()
#Looking at just the folks who completed the survey but went too fast
completed_wg_ses <-
all_wg_raw_ses %>%
filter(completed == TRUE)
completed_ws_ses <-
all_ws_raw_ses %>%
filter(completed == TRUE)
completed_hasty_wg_ses <-
all_wg_raw_ses %>%
filter(completed == TRUE) %>%
getCompletionInterval() %>%
getEthnicities() %>%
getMaternalEd() %>%
getCompletionInterval() %>%
filter(completion_time < 8.5)
completed_hasty_ws_ses <-
all_ws_raw_ses %>%
filter(completed == TRUE) %>%
getCompletionInterval() %>%
getEthnicities() %>%
getMaternalEd() %>%
getCompletionInterval() %>%
filter(completion_time < 8.5)
percent_no_eth_wg <-
completed_hasty_wg_ses %>%
count(ethnicity) %>%
mutate(prop = n / sum(n)) %>%
slice(4) %>%
pull(3) %>%
percent()
percent_no_eth_ws <-
completed_hasty_ws_ses %>%
count(ethnicity) %>%
mutate(prop = n / sum(n)) %>%
slice(3) %>%
pull(3) %>%
percent()
n_total_wg_ses <- nrow(completed_wg_ses)
n_total_ws_ses <- nrow(completed_ws_ses)
n_exclusions_wg_ses <-
exclusion_tbl_ses %>% slice(8) %>% pull(2) %>% as.numeric()
n_exclusions_ws_ses <-
exclusion_tbl_ses %>% slice(8) %>% pull(4) %>% as.numeric()
percent_excluded <-
((n_exclusions_wg_ses + n_exclusions_ws_ses) /
(n_total_wg_ses + n_total_ws_ses)) %>%
percent()
#Putting together a dataframe of all the demographic info in the ses sample
demographics_df_ses <-
bind_rows(
wg_ses %>%
select(
study_name,
subject_id,
sex,
age,
ethnicity,
maternal_ed,
produced
),
ws_ses %>%
select(
study_name,
subject_id,
sex,
age,
ethnicity,
maternal_ed,
produced
)
)
#Prepare the gender plots and numbers for the caption.
wg_gender_ses <-
wg_ses %>%
select(age, produced, sex)
ws_gender_ses <-
ws_ses %>%
select(age, produced, sex)
all_d_gender_ses <-
bind_rows(ws_gender_ses, wg_gender_ses)
all_d_gender_count_ses <- all_d_gender_ses %>% count(sex)
n_females_ses <- all_d_gender_count_ses %>% slice(1) %>% pull(2)
n_males_ses <- all_d_gender_count_ses %>% slice(2) %>% pull(2)
n_other_ses <- all_d_gender_count_ses %>% slice(3) %>% pull(2)
all_gender_n_ses <- all_d_gender_count_ses$n %>% sum()
gender_caption_ses <- str_c(
"Individual children’s vocabulary production scores from Dataset 2 (recent data collection efforts) plotted by children’s age and gender (both WG and WS, N = ",
formatC(all_gender_n_ses - n_other_ses, big.mark = ",", big.interval = 3),
", with ",
formatC(n_females_ses, big.mark = ",", big.interval = 3),
" girls). Lines are best linear fits with associated 95% confidence intervals. Children with a different or no reported gender (N = ",
n_other_ses,
") are omitted here."
)
all_d_gender_ses %>%
filter(sex != "Other") %>%
ggplot(aes(age, produced, color = sex)) +
ggthemes::theme_few() +
geom_jitter(alpha = 0.3, width = 0.225) +
geom_smooth(method = "lm") +
coord_cartesian(ylim = c(0, 686)) +
labs(
x = "Age in months",
y = "Total words produced",
color = "Child gender"
)
#Make tibble to show vocab scores by primary caregiver education
momed_ses_df <-
demographics_df_ses %>%
mutate(highschool = case_when(
maternal_ed == "Some high school or less" ~ "High school",
maternal_ed == "High school diploma" ~ "High school",
maternal_ed == "Some college education" ~ "College",
maternal_ed == "College diploma or more" ~ "College"
))
#Caption for momed plot
momed_caption_ses <-
str_c(
"Individual children's vocabulary production scores from Dataset 2 (recent data collection efforts) plotted by age and level of primary caregiver education, binned into those with a high school diploma or less education and those with some college education or a college diploma (N = ",
nrow(wg_ses) + nrow(ws_ses),
"). Lines show best linear fits and associated 95% confidence intervals."
)
momed_ses_df %>%
filter(
age <= 30
) %>%
ggplot(aes(age, produced, color = highschool)) +
geom_jitter(alpha = 0.3, width = 0.225) +
geom_smooth(method = "lm") +
labs(
x = "Age in months",
y = "Words produced"
) +
ggthemes::theme_few() +
theme(legend.title = element_blank())
#Ethnicity and maternal ed plot for the SES norming sample
ethnicity_plot_df_ses <-
demographics_df_ses %>%
getEthnicitySummary() %>%
filter(
!is.na(ethnicity),
ethnicity != "No ethnicity reported"
) %>%
mutate(`Dataset 2: Recent data collection efforts` = prop.table(n)) %>%
left_join(old_ethnicity_numbers, by = "ethnicity") %>%
left_join(census_ethnicity_numbers, by = "ethnicity") %>%
select(-n) %>%
pivot_longer(
cols = c(
`Dataset 2: Recent data collection efforts`,
`2007 manual`,
`U.S. Census Estimates`
),
names_to = "study",
values_to = "proportion"
) %>%
mutate(study = fct_relevel(
study,
"Dataset 2: Recent data collection efforts",
"2007 manual",
"U.S. Census Estimates"
))
ethnicity_plot_ses <-
ethnicity_plot_df_ses %>%
ggplot(aes(ethnicity, proportion, fill = study)) +
geom_col(position = "dodge") +
labs(
y = "Proportion of\nrespondents"
) +
ggthemes::theme_few() +
theme(
legend.title = element_blank(),
axis.text.x = element_text(
angle = 25,
vjust = 0.9,
hjust = 1
)
) +
labs(x = "Race") +
scale_fill_viridis_d() +
coord_cartesian(ylim = c(0, .81))
maternal_ed_plot_df_ses <-
demographics_df_ses %>%
count(maternal_ed) %>%
mutate(`Dataset 2: Recent data collection efforts` = prop.table(n)) %>%
left_join(old_momed_numbers, by = "maternal_ed") %>%
left_join(census_momed_numbers, by = "maternal_ed") %>%
select(-n) %>%
pivot_longer(
cols = c(
`Dataset 2: Recent data collection efforts`,
`2007 manual`,
`U.S. Census Estimates`
),
names_to = "study",
values_to = "proportion"
) %>%
mutate(
maternal_ed = fct_relevel(
maternal_ed,
"Some high school or less",
"High school diploma",
"Some college education",
"College diploma or more"
)
) %>%
mutate(study = fct_relevel(
study,
"Dataset 2: Recent data collection efforts",
"2007 manual",
"U.S. Census Estimates"
))
x_axis_labs <- c(
"Some high school\n or less",
"High school\ndiploma",
"Some college\neducation",
"College diploma\nor more"
)
maternal_ed_plot_ses <-
maternal_ed_plot_df_ses %>%
filter(maternal_ed != "Not reported") %>%
ggplot(aes(maternal_ed, proportion, fill = study)) +
geom_col(position = "dodge") +
labs(x = "Primary caregiver education") +
ggthemes::theme_few() +
theme(
legend.title = element_blank(),
axis.text.x = element_text(angle = 25, vjust = 0.9, hjust = 1)
) +
scale_x_discrete(labels = x_axis_labs) +
scale_fill_viridis_d() +
coord_cartesian(ylim = c(0, .81))
prow_ses <- cowplot::plot_grid(
ethnicity_plot_ses +
theme(
legend.position = "none",
plot.margin = (margin(r = 2, l = 0)),
axis.text = element_text(size = 15),
axis.title = element_text(size = 15)
),
maternal_ed_plot_ses +
ylab(NULL) +
theme(
legend.position = "none",
plot.margin = (margin(r = 2, l = 2)),
axis.text = element_text(size = 15),
axis.title = element_text(size = 15)
),
align = "hv",
labels = c("A", "B")
)
legend_ses <-
get_legend(
ethnicity_plot_ses +
# guides(color = guide_legend(nrow = 1)) +
# theme(legend.position = "bottom")
theme(
legend.box.margin = margin(0, 0, 0, 15),
legend.text = element_text(size = 15),
legend.position = "bottom"
)
)
demo_barplot_ses <-
plot_grid(prow_ses, legend_ses, ncol = 1, rel_heights = c(1, .1))
ggsave(
"demo_barplot_ses.png",
plot = demo_barplot_ses,
path = fig_directory,
width = 12,
height = 8
)
demo_barplot_caption_ses <-
str_c("Proportion of respondents plotted by child race (A) and educational level of primary caregiver (B) from Dataset 2, recent data collection efforts aimed towards oversampling non-white, less highly-educated families (N = ",
nrow(wg_ses) + nrow(ws_ses),
"), compared with norming sample demographics from Fenson (2007). Latinx participants can be of any race and are thus not represented as a separate category here.")
img_5 <- png::readPNG(path(fig_directory, "demo_barplot_ses.png"))
grid::grid.raster(img_5)
papaja::r_refs("r_references.bib")
r_cites <- papaja::cite_r(file = "r_references.bib")
r_cites
