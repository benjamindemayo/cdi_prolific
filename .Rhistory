filter(completed == TRUE) %>%
left_join(
ws_all_exclusion_info,
by = c("study_name", "subject_id")
) %>%
getCompletionInterval()
#Disclaimer that this is some of the worst code I've ever written. Sorry everyone.
n_total_wg <- nrow(completed_wg)
n_total_ws <- nrow(completed_ws)
excl_col_names <-
c(
"Exclusion",
"WG exclusions",
"% of full WG sample excluded",
"WS exclusions",
"% of full WS sample excluded"
)
#First take away kids who have done the survey more than once.
wg_minus_repeats <-
completed_wg %>%
filter(repeat_num == "1")
wg_repeats_n <- n_total_wg - nrow(wg_minus_repeats)
ws_minus_repeats <-
completed_ws %>%
filter(repeat_num == "1")
ws_repeats_n <- n_total_ws - nrow(ws_minus_repeats)
repeat_admins <-
c(
"Not first administration",
wg_repeats_n,
percent(wg_repeats_n / n_total_wg),
ws_repeats_n,
percent(ws_repeats_n / n_total_ws)
)
names(repeat_admins) <- excl_col_names
#Next take away kids born pre-term or with low birthweight.
wg_minus_premie <-
wg_minus_repeats %>%
filterBirthweight()
wg_premie_n <- nrow(wg_minus_repeats) - nrow(wg_minus_premie)
ws_minus_premie <-
ws_minus_repeats %>%
filterBirthweight()
ws_premie_n <- nrow(ws_minus_repeats) - nrow(ws_minus_premie)
premies <-
c(
"Premature or low birthweight",
wg_premie_n,
percent(wg_premie_n / n_total_wg),
ws_premie_n,
percent(ws_premie_n / n_total_ws)
)
names(premies) <- excl_col_names
#Next take away kids with multilingual exposure
wg_minus_multiling <-
wg_minus_premie %>%
filterMultilingual()
wg_multiling_n <- nrow(wg_minus_premie) - nrow(wg_minus_multiling)
ws_minus_multiling <-
ws_minus_premie %>%
filterMultilingual()
ws_multiling_n <- nrow(ws_minus_premie) - nrow(ws_minus_multiling)
multiling <-
c(
"Multilingual exposure",
wg_multiling_n,
percent(wg_multiling_n / n_total_wg),
ws_multiling_n,
percent(ws_multiling_n / n_total_ws)
)
names(multiling) <- excl_col_names
#Next exclude kids with problems of illness, vision, or hearing
wg_minus_health <-
wg_minus_multiling %>%
filterIllnesses() %>%
filterVision() %>%
filterHearing()
wg_health_n <- nrow(wg_minus_multiling) - nrow(wg_minus_health)
ws_minus_health <-
ws_minus_multiling %>%
filterIllnesses() %>%
filterVision() %>%
filterHearing()
ws_health_n <- nrow(ws_minus_multiling) - nrow(ws_minus_health)
health <-
c(
"Illnesses/Vision/Hearing",
wg_health_n,
percent(wg_health_n / n_total_wg),
ws_health_n,
percent(ws_health_n / n_total_ws)
)
names(health) <- excl_col_names
#Now filter out kids who are the wrong age
wg_minus_age <-
wg_minus_health %>%
filter_age_wg()
wg_age_n <- nrow(wg_minus_health) - nrow(wg_minus_age)
ws_minus_age <-
ws_minus_health %>%
filter_age_ws()
ws_age_n <- nrow(ws_minus_health) - nrow(ws_minus_age)
age <-
c(
"Out of age range",
wg_age_n,
percent(wg_age_n / n_total_wg),
ws_age_n,
percent(ws_age_n / n_total_ws)
)
names(age) <- excl_col_names
#Now we need to get rid of people who did the survey too fast
wg_minus_fakes <-
wg_minus_age %>%
filter(completion_time >= min_completion_time)
wg_fake_n <- nrow(wg_minus_age) - nrow(wg_minus_fakes)
ws_minus_fakes <-
ws_minus_age %>%
filter(completion_time >= min_completion_time)
ws_fake_n <- nrow(ws_minus_age) - nrow(ws_minus_fakes)
fakes <-
c(
"Completed survey too quickly",
wg_fake_n,
percent(wg_fake_n / n_total_wg),
ws_fake_n,
percent(ws_fake_n / n_total_ws)
)
names(fakes) <- excl_col_names
#calculate total amount of WG exclusions
total_wg_exclusions <-
wg_repeats_n +
wg_premie_n +
wg_multiling_n +
wg_health_n +
wg_age_n +
wg_fake_n
#calculate total amount of WS exclusions
total_ws_exclusions <-
ws_repeats_n +
ws_premie_n +
ws_multiling_n +
ws_health_n +
ws_age_n +
ws_fake_n
#make a row in the table for this
totals <-
c(
"Total exclusions",
total_wg_exclusions,
percent(total_wg_exclusions / n_total_wg),
total_ws_exclusions,
percent(total_ws_exclusions / n_total_ws)
)
names(totals) <- excl_col_names
#now make the table
exclusion_tbl <-
bind_rows(repeat_admins, premies, multiling, health, age, fakes, totals)
knitr::kable(exclusion_tbl)
total_admin <- nrow(ws) + nrow(wg)
write_csv(
exclusion_tbl,
file = path(
project_root,
"data",
"exclusion_tables",
"ses_norming_exclusions",
ext = "csv"
)
)
#All data, incomplete and complete
all_d <-
bind_rows(
all_wg_raw %>%
getCompletionInterval() %>%
getMaternalEd() %>%
getEthnicities() %>%
select(
study_name,
subject_id,
link,
completed,
completedBackgroundInfo,
sex,
age,
ethnicity,
maternal_ed,
words_produced = `Words Produced`,
completion_time,
maternal_ed,
ethnicity
) %>%
mutate(completed = as.character(completed)),
all_ws_raw %>%
getCompletionInterval() %>%
getMaternalEd() %>%
getEthnicities() %>%
select(
study_name,
subject_id,
link,
completed,
completedBackgroundInfo,
sex,
age,
ethnicity,
maternal_ed,
words_produced = `Total Produced`,
completion_time,
maternal_ed,
ethnicity
) %>%
mutate(completed = as.character(completed))
)
incomplete <- all_d %>% filter(completed == "FALSE")
complete_bg <- incomplete %>% filter(completedBackgroundInfo == "TRUE")
incomplete_ethnicity <-
incomplete %>%
count(ethnicity)
complete_bg_ethnicity <-
complete_bg %>%
count(ethnicity)
incomplete_momed <-
incomplete %>%
count(maternal_ed)
complete_bg_momed <-
complete_bg %>%
count(maternal_ed)
incomplete_vocab <-
incomplete %>%
filter(!is.na(words_produced))
complete_bg_vocab <-
complete_bg %>%
filter(!is.na(words_produced))
incomplete_vocab %>%
ggplot(aes(age, words_produced)) +
geom_point() +
geom_smooth(method = "lm")
complete_bg %>%
filter(completion_time > min_completion_time) %>%
ggplot(aes(age, words_produced)) +
geom_point() +
geom_smooth(method = "lm")
complete_bg %>%
filter(completion_time > min_completion_time) %>%
count(ethnicity)
#combine relevant demographic information from both WS and WG
demographics_df <-
bind_rows(
wg %>%
select(
study_name,
subject_id,
sex,
age,
ethnicity,
maternal_ed,
words_produced = `Words Produced`
),
ws %>%
select(
study_name,
subject_id,
sex,
age,
ethnicity,
maternal_ed,
words_produced = `Total Produced`
)
)
total_n <- nrow(demographics_df)
ethnicity_na_n <-
nrow(demographics_df %>% filter(ethnicity == "No ethnicity reported"))
ethnicity_total_n <- total_n - ethnicity_na_n
maternal_ed_na_n <- nrow(demographics_df %>% filter(maternal_ed == "Not reported"))
maternal_ed_total_n <- total_n - maternal_ed_na_n
demographics_df %>% count()
total_n <- nrow(demographics_df)
total_n
demographics_df %>% count(sex)
?write.csv
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(png)
library(knitr)
library(markdown)
library(lmerTest)
library(ggthemes)
library(psych)
library(magrittr)
library(tidyboot)
library(fs)
library(ggmap)
library(lubridate)
library(scales)
library(estimatr)
library(cowplot)
source(path(here::here(), "file_paths.R"))
source(functions_script)
#Variables to tinker with
min_completion_time = 8.5
all_ws_1 <-
readInWebCDI(all_data_ws1_path) %>%
select( #drop a bunch of columns that were screwing up the merge with prolific data
-opt_out,
-country,
-sibling_boolean,
-sibling_data,
-sibling_count,
-caregiver_other
)
all_ws_2 <-
readInWebCDI(all_data_ws2_path) %>%
select( #drop a bunch of columns that were screwing up the merge with prolific data
-opt_out,
-country,
-sibling_boolean,
-sibling_data,
-sibling_count,
-caregiver_other
)
all_ws_raw <-
all_ws_1 %>%
bind_rows(all_ws_2) %>%
mutate(completed = case_when(
stringr::str_to_lower(completed) == "true" ~ TRUE,
stringr::str_to_lower(completed) == "false" ~ FALSE
))
all_wg_raw <- readInWebCDI(all_data_wg_path)
save(
all_ws_raw,
file = path(
project_root,
"data",
"full_dataset",
"unfiltered",
"ws_unfiltered.RData"
)
)
save(
all_wg_raw,
file = path(
project_root,
"data",
"full_dataset",
"unfiltered",
"wg_unfiltered.RData"
)
)
#original sample size of 2868
#WG
wg_filtered <-
all_wg_raw %>%
filter(repeat_num == "1") %>%
filterBirthweight() %>%
filterMultilingual() %>%
filterIllnesses() %>%
filterVision() %>%
filterHearing() %>%
getCompletionInterval() %>%
getEthnicities() %>%
getMaternalEd() %>%
filter(completion_time >= min_completion_time) %>%
filter_age_wg()
wg_exclusion_n <- nrow(all_wg_raw) - nrow(wg_filtered)
write_csv(
wg_filtered,
file = path(
project_root,
"data",
"full_dataset",
"filtered",
"wg_filtered.csv"
)
)
ws_filtered <-
all_ws_raw %>%
filter(repeat_num == "1") %>%
filterBirthweight() %>%
filterMultilingual() %>%
filterIllnesses() %>%
filterVision() %>%
filterHearing() %>%
getCompletionInterval() %>%
getEthnicities() %>%
getMaternalEd() %>%
filter(completion_time >= min_completion_time) %>%
filter_age_ws()
ws_exclusion_n <- nrow(all_ws_raw) - nrow(ws_filtered)
write_csv(
ws_filtered,
file = path(
project_root,
"data",
"full_dataset",
"filtered",
"ws_filtered.csv"
)
)
total_n <- nrow(all_ws_raw) + nrow(all_wg_raw)
filtered_n <- nrow(ws_filtered) + nrow(wg_filtered)
nrow(all_wg_raw)
nrow(all_ws_raw)
wg_filtered %>%
mutate(
maternal_ed = fct_recode(
maternal_ed,
"High school diploma or less" = "High school diploma",
"High school diploma or less" = "Some high school or less"
)
) %>%
filter(!is.na(maternal_ed)) %>%
select(age, `Words Produced`, `Words Understood`, maternal_ed) %>%
pivot_longer(
cols = c("Words Produced", "Words Understood"),
names_to = "measure",
values_to = "words"
) %>%
ggplot(aes(age, words, color = maternal_ed)) +
facet_grid(~measure) +
geom_jitter(alpha = 0.2, width = 0.225) +
geom_quantile(quantiles = .5, method = "rqss", lambda = 3, size = 1) +
coord_cartesian(ylim = c(0, 390)) +
ggthemes::theme_few() +
labs(
color = "Maternal education level",
x = "age in months",
y = "number of words"
) +
scale_x_continuous(breaks = seq(from = 8, to = 18, by = 2))
wg_filtered %>%
filter(!is.na(maternal_ed)) %>%
ggplot(aes(age, `Words Understood`, color = maternal_ed)) +
ggthemes::theme_few() +
geom_jitter(alpha = 0.3, width = 0.225) +
geom_smooth(method = "lm") +
coord_cartesian(ylim = c(0, 390)) +
labs(
x = "Age in months",
y = "Total words understood",
color = "Maternal education"
)
wg_filtered %>%
mutate(
maternal_ed = fct_recode(
maternal_ed,
"High school diploma or less" = "High school diploma",
"High school diploma or less" = "Some high school or less"
)
) %>%
filter(!is.na(maternal_ed)) %>%
select(age, `Words Produced`, `Words Understood`, maternal_ed) %>%
pivot_longer(
cols = c("Words Produced", "Words Understood"),
names_to = "measure",
values_to = "words"
) %>%
ggplot(aes(age, words, color = maternal_ed)) +
facet_grid(~measure) +
geom_jitter(alpha = 0.2, width = 0.225) +
geom_quantile(quantiles = .5, method = "rqss", lambda = 3, size = 1) +
coord_cartesian(ylim = c(0, 390)) +
ggthemes::theme_few() +
labs(
color = "Maternal education level",
x = "age in months",
y = "number of words"
) +
scale_x_continuous(breaks = seq(from = 8, to = 18, by = 2))
wg_momed <- wg_filtered %>%
mutate(maternal_ed = maternal_ed %>%
fct_collapse("High school diploma or less" = c("High school diploma", "Some high school or less")) %>%
fct_relevel("High school diploma or less",  "Some college education", "College diploma or more")) %>%
filter(!is.na(maternal_ed)) %>%
select(age, `Words Produced`, `Words Understood`, maternal_ed) %>%
pivot_longer(
cols = c("Words Produced", "Words Understood"),
names_to = "measure",
values_to = "words"
)
total_words <- 396
wg_momed_models <- wg_momed %>%
filter(words <= total_words) %>% # there's a kid with 490 for some reason?
mutate(words_false = total_words - words) %>%
group_by(measure) %>%
nest() %>%
mutate(model = map(data, function(measure_data) {
glm(cbind(words, words_false) ~ age * maternal_ed - maternal_ed,
family = "binomial", data = measure_data)
}))
View(wg_momed_models)
wg_momed_models <- wg_momed %>%
filter(words <= total_words) %>% # there's a kid with 490 for some reason?
mutate(words_false = total_words - words)
View(wg_momed_models)
wg_momed_models <- wg_momed %>%
filter(words <= total_words) %>% # there's a kid with 490 for some reason?
mutate(words_false = total_words - words) %>%
group_by(measure) %>%
nest()
wg_momed_models$data
wg_momed_model$data %>% View()
wg_momed_models$data %>% View()
View(wg_momed_models[[2]][[1]])
?cbind
?glm
wg_momed_models[[2]]
wg_momed_models[[2]] %>% View()
wg_momed_models[[2]] %>% typeof()
?nest
wg_momed_models[[2]][[1]]
wg_momed_models[[2]][[1]] %>% View()
