filter(
age <= 30
) %>%
ggplot(aes(age, produced, color = highschool)) +
geom_jitter(alpha = 0.6, width = 0.225, size = 2) +
geom_smooth(method = "lm") +
labs(
x = "Age in months",
y = "Words produced"
) +
ggthemes::theme_few() +
theme(legend.title = element_blank()) +
scale_color_viridis_d(option = "inferno", begin = 0.3, end = 0.8)
#Make tibble to show vocab scores by primary caregiver education
momed_ses_df <-
demographics_df_ses %>%
mutate(highschool = case_when(
maternal_ed == "Some high school or less" ~ "High school",
maternal_ed == "High school diploma" ~ "High school",
maternal_ed == "Some college education" ~ "College",
maternal_ed == "College diploma or more" ~ "College"
))
#Caption for momed plot
momed_caption_ses <-
str_c(
"Individual children's vocabulary production scores from Dataset 2 (recent data collection efforts) plotted by age and level of primary caregiver education, binned into those with a high school diploma or less education and those with some college education or a college diploma (N = ",
nrow(wg_ses) + nrow(ws_ses),
"). Lines show best linear fits and associated 95% confidence intervals."
)
momed_ses_v1 <-
momed_ses_df %>%
filter(
age <= 30
) %>%
ggplot(aes(age, produced, color = highschool)) +
geom_jitter(alpha = 0.6, width = 0.225, size = 2) +
geom_smooth(method = "lm") +
labs(
x = "Age in months",
y = "Words produced"
) +
ggthemes::theme_few() +
theme(legend.title = element_blank()) +
scale_color_viridis_d(option = "inferno", begin = 0.3, end = 0.8)
momed_ses_v1
momed_ses_v1 <-
momed_ses_df %>%
filter(
age <= 30
) %>%
ggplot(aes(age, produced, color = highschool)) +
geom_jitter(alpha = 0.6, width = 0.225, size = 2) +
geom_smooth(method = "lm") +
labs(
x = "Age in months",
y = "Words produced"
) +
ggthemes::theme_few() +
theme(legend.title = element_blank()) +
scale_color_viridis_d(option = "inferno", begin = 0.3, end = 0.8) +
coord_cartesian(ylim = c(0, 600))
momed_ses_v1
wg_med_plot <-
wg_filtered %>%
mutate(
maternal_ed = fct_recode(
maternal_ed,
"High school diploma or less" = "High school diploma",
"High school diploma or less" = "Some high school or less"
)
) %>%
filter(!is.na(maternal_ed) & maternal_ed != "Not reported") %>%
select(
age,
`Words Understood` = understood,
`Words Produced` = produced,
maternal_ed
) %>%
pivot_longer(
cols = c("Words Understood", "Words Produced"),
names_to = "measure",
values_to = "words"
) %>%
group_by(age, maternal_ed, measure) %>%
summarize(
median = median(words, na.rm = TRUE),
first_quartile = quantile(words, probs = 0.25, na.rm = TRUE),
third_quartile = quantile(words, probs = 0.75, na.rm = TRUE)
) %>%
ggplot(aes(age, median, color = maternal_ed)) +
facet_grid(~measure) +
geom_point(
position = position_dodge(width = 0.7),
size = 3
) +
geom_linerange(
aes(ymin = first_quartile, ymax = third_quartile),
position = position_dodge(width = 0.7),
size = 0.8
) +
scale_x_continuous(breaks = seq(from = 8, to = 18, by = 2)) +
coord_cartesian(ylim = c(0, 390)) +
ggthemes::theme_few() +
labs(
x = "Age in months",
y = "Nmber of words"
) +
theme(
axis.text = element_text(size = 15),
axis.title = element_text(size = 15),
legend.text = element_text(size = 15),
strip.text = element_text(size = 15),
legend.position = "bottom",
legend.title = element_blank()
) +
scale_color_viridis_c(option = "inferno", begin = 0.3, end = 0.8)
ggsave(
"median_plot.png",
plot = wg_med_plot,
path = fig_directory,
width = 12,
height = 8
)
wg_med_plot <-
wg_filtered %>%
mutate(
maternal_ed = fct_recode(
maternal_ed,
"High school diploma or less" = "High school diploma",
"High school diploma or less" = "Some high school or less"
)
) %>%
filter(!is.na(maternal_ed) & maternal_ed != "Not reported") %>%
select(
age,
`Words Understood` = understood,
`Words Produced` = produced,
maternal_ed
) %>%
pivot_longer(
cols = c("Words Understood", "Words Produced"),
names_to = "measure",
values_to = "words"
) %>%
group_by(age, maternal_ed, measure) %>%
summarize(
median = median(words, na.rm = TRUE),
first_quartile = quantile(words, probs = 0.25, na.rm = TRUE),
third_quartile = quantile(words, probs = 0.75, na.rm = TRUE)
) %>%
ggplot(aes(age, median, color = maternal_ed)) +
facet_grid(~measure) +
geom_point(
position = position_dodge(width = 0.7),
size = 3
) +
geom_linerange(
aes(ymin = first_quartile, ymax = third_quartile),
position = position_dodge(width = 0.7),
size = 0.8
) +
scale_x_continuous(breaks = seq(from = 8, to = 18, by = 2)) +
coord_cartesian(ylim = c(0, 390)) +
ggthemes::theme_few() +
labs(
x = "Age in months",
y = "Nmber of words"
) +
theme(
axis.text = element_text(size = 15),
axis.title = element_text(size = 15),
legend.text = element_text(size = 15),
strip.text = element_text(size = 15),
legend.position = "bottom",
legend.title = element_blank()
) +
scale_color_viridis_d(option = "inferno", begin = 0.3, end = 0.8)
ggsave(
"median_plot.png",
plot = wg_med_plot,
path = fig_directory,
width = 12,
height = 8
)
ws_med_plot <-
ws_filtered %>%
mutate(
maternal_ed = fct_recode(
maternal_ed,
"High school diploma or less" = "High school diploma",
"High school diploma or less" = "Some high school or less"
)
) %>%
filter(!is.na(maternal_ed) & maternal_ed != "Not reported") %>%
select(
age,
produced,
maternal_ed
) %>%
group_by(age, maternal_ed) %>%
summarize(
median = median(produced, na.rm = TRUE),
first_quartile = quantile(produced, probs = 0.25, na.rm = TRUE),
third_quartile = quantile(produced, probs = 0.75, na.rm = TRUE)
) %>%
ggplot(aes(age, median, color = maternal_ed)) +
geom_point(
position = position_dodge(width = 0.7),
size = 3
) +
geom_linerange(
aes(ymin = first_quartile, ymax = third_quartile),
position = position_dodge(width = 0.7),
size = 0.8
) +
scale_x_continuous(breaks = seq(from = 16, to = 30, by = 2)) +
coord_cartesian(ylim = c(0, 700)) +
ggthemes::theme_few() +
labs(
x = "Age in months",
y = "Number of words produced"
) +
theme(
axis.text = element_text(size = 15),
axis.title = element_text(size = 15),
legend.text = element_text(size = 15),
strip.text = element_text(size = 15),
legend.position = "bottom",
legend.title = element_blank()
) +
scale_color_viridis_d(option = "inferno", begin = 0.3, end = 0.8)
ggsave(
"wsmedplot.png",
plot = ws_med_plot,
path = fig_directory,
width = 10,
height = 7
)
?across
ses_wg_lm_comp %>%
tidy() %>%
mutate(term = rownames) %>%
select(-outcome) %>%
mutate(across(.cols = everything(), .fns = round(digits = 3)))
ses_wg_lm_comp %>%
tidy() %>%
mutate(term = rownames) %>%
select(-outcome) %>%
mutate(across(.cols = everything(), .fns = ~ round(digits = 3)))
comp_table <-
ses_wg_lm_comp %>%
tidy() %>%
mutate(term = rownames) %>%
select(-outcome) %>%
mutate(across(.cols = everything(), .fns = ~ round(cur_column(), digits = 3)))
comp_table <-
ses_wg_lm_comp %>%
tidy() %>%
mutate(term = rownames) %>%
select(-outcome) %>%
mutate(across(.fns = ~ round(cur_column(), digits = 3)))
ses_wg_lm_comp %>%
tidy() %>%
mutate(term = rownames) %>%
select(-outcome) %>%
mutate(across(everything(), as.character))
ses_wg_lm_comp %>%
tidy() %>%
mutate(term = rownames) %>%
select(-outcome)
ses_wg_lm_comp %>%
tidy()
ses_wg_lm_comp %>%
tidy() %>%
mutate(term = rownames)
rownames <-
c(
"Intercept",
"Age",
"Caregiver education: Some college",
"Caregiver education: High school or less",
"Age * Caregiver education: Some college",
"Age * Caregiver education: High school or less"
)
ses_wg_lm_comp %>%
tidy() %>%
mutate(term = rownames) %>%
select(-outcome) %>%
mutate(across(everything(), ~ round(digits = 2)))
ses_wg_lm_comp %>%
tidy() %>%
mutate(term = rownames) %>%
select(-outcome) %>%
mutate(across(everything(), ~ round(cur_column(), digits = 2)))
ses_wg_lm_comp %>%
tidy() %>%
mutate(term = rownames) %>%
select(-outcome) %>%
mutate(across(everything(), as.character))
ses_wg_lm_comp %>%
tidy() %>%
mutate(across(everything(), ~ round(cur_column(), digits = 2))) %>%
mutate(term = rownames) %>%
select(-outcome)
ses_wg_lm_comp %>%
tidy()
ses_wg_lm_comp %>%
tidy() %>%
mutate(across(everything(), round(cur_column(), digits = 2)))
ses_wg_lm_comp %>%
tidy() %>%
mutate(across(everything(), round))
ses_wg_lm_comp %>%
tidy()
ses_wg_lm_comp %>%
tidy() %>%
mutate(across(
.cols = !term,
.fns = round
))
ses_wg_lm_comp %>%
tidy() %>%
mutate(across(
.cols = 2:7,
.fns = round
))
ses_wg_lm_comp %>%
tidy() %>%
mutate(across(
.cols = 2:7,
.fns = ~ round(cur_column(), digits = 3)
))
ses_wg_lm_comp %>%
tidy() %>%
mutate(across(
.cols = 2:7,
.fns = ~ round(., digits = 3)
))
ses_wg_lm_comp %>%
tidy() %>%
mutate(across(
.cols = 2:7,
.fns = ~ round(., digits = 3)
)) %>%
mutate(term = rownames) %>%
select(-outcome) %>%
kbl(
booktabs = TRUE,
linesep = "",
caption = "Regression output for WG comprehension measure."
) %>%
kable_styling(
position = "center",
latex_options = "scale_down"
)
ses_wg_lm_prod %>%
tidy() %>%
mutate(across(
.cols = 2:7,
.fns = ~ round(., digits = 3)
)) %>%
mutate(term = rownames) %>%
select(-outcome) %>%
kbl(
booktabs = TRUE,
linesep = "",
caption = "Regression output for WG production measure."
) %>%
kable_styling(
position = "center",
latex_options = "scale_down"
)
prod_table
prod_table <-
ses_wg_lm_prod %>%
tidy() %>%
mutate(across(
.cols = 2:7,
.fns = ~ round(., digits = 3)
)) %>%
mutate(term = rownames) %>%
select(-outcome) %>%
kbl(
booktabs = TRUE,
linesep = "",
caption = "Regression output for WG production measure."
) %>%
kable_styling(
position = "center",
latex_options = "scale_down"
)
prod_table
#4-facet plot of WG glm for wordbank and web-cdi
wgglm <-
wg_momed %>%
mutate(measure = fct_relevel(measure, "Words Understood")) %>%
ggplot(aes(age, words, color = maternal_ed)) +
facet_wrap(measure~sample) +
geom_jitter(alpha = 0.15, width = 0.225) +
geom_line(aes(y = fitted), data = wg_momed_fits, size = 1.7, alpha = 0.8) +
coord_cartesian(ylim = c(0, 396)) +
ggthemes::theme_few() +
labs(
x = "Age in months",
y = "Number of words",
color = "Primary caregiver education",
linetype = "Primary caregiver education"
) +
scale_x_continuous(breaks = seq(from = 8, to = 18, by = 2)) +
scale_color_viridis_d(option = "inferno", begin = .3, end = .8) +
theme(
legend.position = "bottom",
axis.title = element_text(size = 20),
axis.text = element_text(size = 17),
legend.title = element_text(size = 20),
legend.text = element_text(size = 17),
strip.text = element_text(size = 17),
panel.spacing.y = unit(2, "lines")
) +
guides(color = guide_legend(title.position = "top"))
ggsave(
"wgglm.png",
plot = wgglm,
path = fig_directory,
width = 13,
height = 10
)
ggsave(
"wgglm.png",
plot = wgglm,
path = fig_directory,
width = 13,
height = 11.5
)
path(fig_directory, "WS_instructions.pdf")
knitr::include_graphics(
path = path(fig_directory, "WS_instructions.pdf")
)
library(papaja)
library(tidyverse)
library(fs)
library(xtable)
library(kableExtra)
library(cowplot)
library(scales)
library(estimatr)
library(broman)
library(wordbankr)
source(path(here::here(), "file_paths.R"))
source(functions_script)
#Read in (somewhat) preprocessed forms of the data
load(wg_unfiltered_path)
load(ws_unfiltered_path)
load(wg_filtered_path)
load(ws_filtered_path)
load(wg_unfiltered_ses_path)
load(ws_unfiltered_ses_path)
load(wg_filtered_ses_path)
load(ws_filtered_ses_path)
papaja::r_refs("r_references.bib")
r_cites <- papaja::cite_r(file = "r_references.bib")
r_cites
library(papaja)
library(tidyverse)
library(fs)
library(xtable)
library(kableExtra)
library(cowplot)
library(scales)
library(estimatr)
library(broman)
library(wordbankr)
source(path(here::here(), "file_paths.R"))
source(functions_script)
#Read in (somewhat) preprocessed forms of the data
load(wg_unfiltered_path)
load(ws_unfiltered_path)
load(wg_filtered_path)
load(ws_filtered_path)
load(wg_unfiltered_ses_path)
load(ws_unfiltered_ses_path)
load(wg_filtered_ses_path)
load(ws_filtered_ses_path)
# Seed for random number generation
set.seed(42)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed, warning = FALSE, message = FALSE)
install.packages("kbl")
install.packages("kableExtra")
install.packages("kableExtra")
library(papaja)
library(tidyverse)
library(fs)
library(xtable)
library(kableExtra)
library(cowplot)
library(scales)
library(estimatr)
library(broman)
library(wordbankr)
source(path(here::here(), "file_paths.R"))
source(functions_script)
#Read in (somewhat) preprocessed forms of the data
load(wg_unfiltered_path)
load(ws_unfiltered_path)
load(wg_filtered_path)
load(ws_filtered_path)
load(wg_unfiltered_ses_path)
load(ws_unfiltered_ses_path)
load(wg_filtered_ses_path)
load(ws_filtered_ses_path)
render_appendix("appendix_options_table.Rmd")
```{r}
